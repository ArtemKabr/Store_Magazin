"""–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã (views) –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è catalog."""

import logging

from django.contrib.auth.decorators import login_required
from django.core.cache import cache
from django.core.paginator import EmptyPage, PageNotAnInteger, Paginator
from django.http import HttpRequest, HttpResponse, HttpResponseForbidden
from django.shortcuts import get_object_or_404, redirect, render
from django.views.decorators.cache import cache_page

from catalog.services import get_products_by_category

from .forms import ContactForm, ProductForm
from .models import ContactInfo, Product

logger = logging.getLogger(__name__)


# ==============================================================
# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ + —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫
# ==============================================================
def home_view(request: HttpRequest) -> HttpResponse:
    """
    –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π —Ä–∞—Å—Å—ã–ª–æ–∫.
    –î–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–æ–∫ –∫–µ—à–∏—Ä—É—é—Ç—Å—è –Ω–∞ 30 —Å–µ–∫—É–Ω–¥.
    """
    # --- —Ç–æ–≤–∞—Ä—ã ---
    qs = Product.objects.select_related("category").order_by("-created_at")
    paginator = Paginator(qs, 8)
    page_number = request.GET.get("page", 1)
    try:
        page_obj = paginator.page(page_number)
    except (PageNotAnInteger, EmptyPage):
        page_obj = paginator.page(1)

    # --- —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫ ---
    cache_key = "home_stats_v1"
    data = cache.get(cache_key)

    if not data:
        try:
            from mailings.models import (  # –∏–º–ø–æ—Ä—Ç –≤–Ω—É—Ç—Ä–∏, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞–ª–æ—Å—å –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏—è—Ö
                Client,
                Mailing,
            )

            total_mailings = Mailing.objects.count()
            active_mailings = Mailing.objects.filter(status="–ó–∞–ø—É—â–µ–Ω–∞").count()
            unique_clients = Client.objects.count()
        except Exception:
            total_mailings = active_mailings = unique_clients = 0

        data = {
            "total_mailings": total_mailings,
            "active_mailings": active_mailings,
            "unique_clients": unique_clients,
        }
        cache.set(cache_key, data, 30)

    # --- —Ñ–ª–∞–≥ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ / –∞–¥–º–∏–Ω–∞ ---
    is_manager = request.user.is_authenticated and (
        request.user.is_staff or request.user.groups.filter(name="–ú–µ–Ω–µ–¥–∂–µ—Ä—ã").exists()
    )

    context = {
        "title": "–ú–∞–≥–∞–∑–∏–Ω ‚Äî –ì–ª–∞–≤–Ω–∞—è",
        "products": page_obj,
        "page_obj": page_obj,
        "paginator": paginator,
        "is_paginated": page_obj.has_other_pages(),
        **data,
        "is_manager": is_manager,  # üëà —Ç–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω –º–æ–∂–µ—Ç –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å {% if is_manager %}
    }

    return render(request, "catalog/home.html", context)


# ==============================================================
# üß© –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞ (–∫–µ—à Redis / LocMem)
# ==============================================================
@cache_page(60 * 15)
def product_detail_view(request: HttpRequest, pk: int) -> HttpResponse:
    """–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞ (–∫–µ—à–∏—Ä—É–µ—Ç—Å—è –Ω–∞ 15 –º–∏–Ω—É—Ç)."""
    product = get_object_or_404(Product.objects.select_related("category"), pk=pk)
    return render(
        request,
        "catalog/product_detail.html",
        {"title": product.title, "product": product},
    )


# ==============================================================
#  CRUD: –°–æ–∑–¥–∞–Ω–∏–µ / –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ / –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
# ==============================================================
@login_required(login_url="users:login")
def product_create_view(request):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (—Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)."""
    if request.method == "POST":
        form = ProductForm(request.POST, request.FILES)
        if form.is_valid():
            product = form.save(commit=False)
            product.owner = request.user
            product.save()
            return redirect(product.get_absolute_url())
    else:
        form = ProductForm()
    return render(
        request,
        "catalog/product_form.html",
        {"title": "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", "form": form},
    )


@login_required(login_url="users:login")
def product_update_view(request: HttpRequest, pk: int) -> HttpResponse:
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞."""
    product = get_object_or_404(Product, pk=pk)
    if request.method == "POST":
        form = ProductForm(request.POST, request.FILES, instance=product)
        if form.is_valid():
            form.save()
            return redirect(product.get_absolute_url())
    else:
        form = ProductForm(instance=product)
    return render(
        request,
        "catalog/product_form.html",
        {"title": f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: {product.title}", "form": form},
    )


@login_required(login_url="users:login")
def product_delete_view(request: HttpRequest, pk: int) -> HttpResponse:
    """–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)."""
    product = get_object_or_404(Product, pk=pk)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if request.user != getattr(product, "owner", None) and not request.user.has_perm("catalog.delete_product"):
        return HttpResponseForbidden("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.")

    if request.method == "POST":
        product.delete()
        return redirect("catalog:home")

    return render(
        request,
        "catalog/product_delete_confirm.html",
        {"title": f"–£–¥–∞–ª–∏—Ç—å: {product.title}", "product": product},
    )


# ==============================================================
# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
# ==============================================================
def category_products_view(request, slug: str):
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ.
    """
    cache_key = f"category_products_{slug}"
    products = cache.get(cache_key)

    if products is None:
        products = list(get_products_by_category(slug))
        cache.set(cache_key, products, 60 * 10)  # –∫–µ—à 10 –º–∏–Ω

    context = {
        "title": f"–¢–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {slug}",
        "products": products,
    }
    return render(request, "catalog/category_products.html", context)


def contacts_view(request: HttpRequest) -> HttpResponse:
    """–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ —Ñ–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."""
    success = False
    form = ContactForm(request.POST or None)
    if request.method == "POST" and form.is_valid():
        success = True
        form = ContactForm()
    contacts = ContactInfo.objects.first()
    return render(
        request,
        "catalog/contacts.html",
        {
            "title": "–ö–æ–Ω—Ç–∞–∫—Ç—ã",
            "form": form,
            "success": success,
            "contacts": contacts,
        },
    )
